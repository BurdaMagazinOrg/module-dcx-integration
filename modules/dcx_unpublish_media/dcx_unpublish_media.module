<?php
/**
 * @file
 * Contains
 */

/**
 * Implement hook_ENTITY_TYPE_insert().
 */
function dcx_unpublish_media_media_update($entity) {

  $mediaBundleStorage = \Drupal::entityTypeManager()
    ->getStorage('media_bundle');
  $bundle = $mediaBundleStorage->load($entity->bundle());


  if ($bundle->get('type') == 'image') {

    $field = $bundle->get('type_configuration')['source_field'];

    /** @var \Drupal\image\Plugin\Field\FieldType\ImageItem $image */
    $image = $entity->$field->first();

    $file = file_load($image->target_id);

    if (!$entity->status->value && $entity->original->status->value) {

      $imageStyles = \Drupal\image\Entity\ImageStyle::loadMultiple();

      /** @var \Drupal\image\ImageStyleInterface $imageStyle */
      foreach ($imageStyles as $imageStyle) {
        $imageStyle->flush($file->getFileUri());
      }
      file_move($file, str_replace('public://', 'private://', $file->getFileUri()));
    }
    elseif ($entity->status->value && !$entity->original->status->value) {
      file_move($file, str_replace('private://', 'public://', $file->getFileUri()));

      /** @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache */
      $cache = \Drupal::service('cache_tags.invalidator');

      $setting = \Drupal::config('dcx_unpublish_media.unpublishmediasettings');

      $cache->invalidateTags(['media:' . $setting->get('default_image')]);
    }
  }
}

/**
 * Implements hook_entity_view().
 */
function dcx_unpublish_media_media_build_defaults_alter(array &$build, \Drupal\Core\Entity\EntityInterface $entity, $view_mode) {

  $mediaBundleStorage = \Drupal::entityTypeManager()
    ->getStorage('media_bundle');
  $bundle = $mediaBundleStorage->load($entity->bundle());


  if ($bundle->get('type') == 'image' && !$entity->status->value) {

    $setting = \Drupal::config('dcx_unpublish_media.unpublishmediasettings');
    
    $mediaStorage = \Drupal::entityTypeManager()->getStorage('media');
    $media = $mediaStorage->load($setting->get('default_image'));

    $renderController = \Drupal::entityTypeManager()->getViewBuilder('media');
    $build = $renderController->view($media, $view_mode);
  }
}

