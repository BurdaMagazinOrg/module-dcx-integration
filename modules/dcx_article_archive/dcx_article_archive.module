<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Contains dcx_article_archive.module.
 */

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function dcx_article_archive_node_insert($entity) {
  _dcx_article_archive_archive($entity, $is_new);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function dcx_article_archive_node_update($entity) {
  _dcx_article_archive_archive($entity);
}

/**
 * Form submission handler to trigger archiving of articles.
 *
 * Extract title and text-only version of field_paragraphs, send it to DC-X.
 */
function _dcx_article_archive_archive($entity, $is_new = FALSE) {
  if ('article' !== $entity->bundle()) { return; }

  try {
    $archiver = Drupal::service('dcx_article_archive.articlearchiver');
    $archiver->archive($entity);
  }
  catch (\Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }

}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function dcx_article_archive_form_node_article_edit_form_alter(&$form, FormStateInterface $form_state, $id) {
  _dcx_article_archive_form_alter($form, $form_state, $id);
}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function dcx_article_archive_form_node_article_form_alter(&$form, FormStateInterface $form_state) {
  _dcx_article_archive_form_alter($form, $form_state, $id);
}

/**
 * Append additional submission handler to the given form.
 *
 * @param array $form
 * @param FormStateInterface $form_state
 */
function _dcx_article_archive_form_alter(&$form, FormStateInterface $form_state) {
  // Nobody should be able to access field_dcx_id. It's handle exclusively
  // by the custom submission handler. Nevertheless it might be interesting
  // to know the ID.
  $form['field_dcx_id']['#disabled'] = TRUE;
  $form['field_dcx_id']['#group'] = 'author';
}
