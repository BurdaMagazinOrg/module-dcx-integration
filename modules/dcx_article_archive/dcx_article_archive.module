<?php

/**
 * @file
 * Contains dcx_article_archive.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function dcx_article_archive_node_insert($entity) {
  _dcx_article_archive_queue_article($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function dcx_article_archive_node_update($entity) {
  if ($entity->DO_NOT_QUEUE_AGAIN) {
    return;
  }
  _dcx_article_archive_queue_article($entity);
}

/**
 * Queue the saved entit for processing with the article archiver.
 */
function _dcx_article_archive_queue_article($node) {
  if ('article' !== $node->bundle()) {
    return;
  }

  try {
    $queue = \Drupal::queue('dcx_article_archiver', TRUE);
    $queue->createItem($node->id());
  }
  catch (\Exception $e) {
    \Drupal::messenger()->addError($e->getMessage());
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dcx_article_archive_form_node_article_edit_form_alter(&$form, FormStateInterface $form_state, $id) {
  _dcx_article_archive_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dcx_article_archive_form_node_article_form_alter(&$form, FormStateInterface $form_state) {
  _dcx_article_archive_form_alter($form, $form_state);
}

/**
 * Append additional submission handler to the given form.
 *
 * @param array $form
 *   Array form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state object.
 */
function _dcx_article_archive_form_alter(array &$form, FormStateInterface $form_state) {
  // Nobody should be able to access field_dcx_id. It's handle exclusively
  // by the custom submission handler. Nevertheless it might be interesting
  // to know the ID.
  $form['field_dcx_id']['#disabled'] = TRUE;
  $form['field_dcx_id']['#group'] = 'author';
}
