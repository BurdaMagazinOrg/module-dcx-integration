<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Contains dcx_article_archive.module.
 */

/**
 * Implements hook_form_FORM_ID_alter.
 */
function dcx_article_archive_form_node_article_edit_form_alter(&$form, FormStateInterface $form_state, $id) {
  _dcx_article_archive_form_alter($form, $form_state, $id);
}

/**
 * Implements hook_form_FORM_ID_alter.
 */
function dcx_article_archive_form_node_article_form_alter(&$form, FormStateInterface $form_state) {
  _dcx_article_archive_form_alter($form, $form_state, $id);
}

/**
 * Append additional submission handler to the given form.
 *
 * @param array $form
 * @param FormStateInterface $form_state
 */
function _dcx_article_archive_form_alter(&$form, FormStateInterface $form_state) {
  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'dcx_article_archive_form_submit';
    }
  }

  // Nobody should be able to access field_dcx_id. It's handle exclusively
  // by the custom submission handler. Nevertheless it might be interesting
  // to know the ID.
  $form['field_dcx_id']['#disabled'] = TRUE;
  $form['field_dcx_id']['#group'] = 'author';
}

/**
 * Form submission handler to trigger archiving of articles.
 *
 * Extract title and text-only version of field_paragraphs, send it to DC-X.
 */
function dcx_article_archive_form_submit(array &$form, FormStateInterface $form_state) {
  $node = $form_state->getFormObject()->getEntity();

  $discovery = Drupal::service('dcx_track_media_usage.discover_referenced_entities');
  $usage = $discovery->discover($node, 'return_entities');
  dpm($usage);

  $url = $node->toUrl()->setAbsolute()->toString();

  $title = $node->title->value;

  $paragraphs = $node->field_paragraphs->view("default");
  $rendered = Drupal::service('renderer')->render($paragraphs);
  $text = strip_tags($rendered);

  // This is NULL for new article and that's perfectly fine.
  $existing_dcx_id = $node->field_dcx_id->value;

  try {
    $dcx_id = \Drupal::service('dcx_integration.client')->archiveArticle($url, $title, $text, $existing_dcx_id);
  } catch (\Exception $e) {
    \Drupal::logger('dcx_article_archive')->error($e->getMessage());
    drupal_set_message($e->getMessage(), 'error');
    return;
  }

  // If a non-null id has changed while archiving something is severly wrong.
  // Yet another case of "this should never happen".
  if (NULL !== $existing_dcx_id && $existing_dcx_id != $dcx_id) {
    $message = t('Node %url changed its DC-X ID from %from to %to while archiving to DC-X.',[
      '%url' => $url,
      '%from' => $existing_dcx_id,
      '%to' => $dcx_id,
    ]);
    \Drupal::logger('dcx_article_archive')->error($message);
    drupal_set_message($message, 'error');
    return;
  }

  // If the DC-X ID has changed, we need to save the id to the entity.
  if ($existing_dcx_id !== $dcx_id) {
    $node->set('field_dcx_id', $dcx_id, FALSE);
    $node->save();
  }
}
