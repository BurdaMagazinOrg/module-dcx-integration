<?php

/**
 * @file
 * Contains dcx_article_import.module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Add local tasks to dcx_article_import.form and node.add with parameter
 * 'article'. Adding local tasks to a route only for a specific parameter is
 * not possible via *.task.yml, so we need this hack.
 */
function dcx_article_import_menu_local_tasks_alter(&$data, $route_name) {
  $node_add_article = FALSE;

  if ('node.add' == $route_name) {
    // For page.add we need to turn off caching to allow the tabs to be computed
    // everytime we visit the route, as the tabs should only show up for our
    // parameter.
    $data['cacheability']->setCacheMaxAge(0);

    // This is ugly like hell, but apparently the way to do this atm:
    // https://www.drupal.org/node/2274705
    $current_path = \Drupal::service('path.current')->getPath();
    $path_args = explode('/', $current_path);
    // $current_path began with a slash, so this starts to count at 1.
    if ('article' == $path_args[3]) {
      $node_add_article = TRUE;
    }
  }

  if ($node_add_article || 'dcx_article_import.form' == $route_name) {
    $data['tabs'][] = [
      'node.add.article' => [
        '#theme' => 'menu_local_task',
        '#active' => ('node.add' == $route_name),
        '#link' => [
          'title' => \Drupal::translation()->translate('Add'),
          'url' => Url::fromRoute('node.add', ['node_type' => 'article']),
        ],
      ],
      'dcx_article_import.form' => [
        '#theme' => 'menu_local_task',
        '#active' => ('dcx_article_import.form' == $route_name),
        '#link' => [
          'title' => \Drupal::translation()->translate('DC-X Import'),
          'url' => Url::fromRoute('dcx_article_import.form'),
        ],
      ],
    ];
  }
}
