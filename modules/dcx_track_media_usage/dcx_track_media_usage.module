<?php

/**
 * @file
 * Implements functionality that handel's the usage of medias in entities.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function dcx_track_media_usage_media_delete($entity) {
  if ('image' !== $entity->bundle()) {
    return;
  }

  $dcx_id = $entity->field_dcx_id->value;
  try {
    $urls = [];
    // Remove all usage tracking info if this is not a clone.
    if ($entity->field_parent_media && NULL === $entity->field_parent_media->target_id) {
      $urls = Drupal::service('dcx_integration.client')->removeAllUsage($dcx_id);
    }
    // It's a clone. Only remove respective pubinfo.
    else {
      $pubinfos = Drupal::service('dcx_integration.client')->removeUsageForCertainEntity($dcx_id, $entity->getEntityTypeId(), $entity->id());
    }
    foreach ($urls as $url) {
      $parts = explode('/', $url);
      $entityId = end($parts);
      array_pop($parts);
      $entityType = implode('/', $parts);

      $entityStorage = \Drupal::entityTypeManager()
        ->getStorage($entityType);

      $entityStorage->load($entityId)->save();
    }

  }
  catch (\Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}

/**
 * Implements hook_entity_insert().
 */
function dcx_track_media_usage_entity_insert(EntityInterface $entity) {

  if (in_array($entity->getEntityType()->id(), ['taxonomy_term', 'node'])) {
    _dcx_track_media_usage_track_media_usage($entity);
  }
}

/**
 * Implements hook_entity_update().
 */
function dcx_track_media_usage_entity_update(EntityInterface $entity) {

  if (in_array($entity->getEntityType()->id(), ['taxonomy_term', 'node'])) {
    _dcx_track_media_usage_track_media_usage($entity);
  }
}

/**
 * Find media attached to this entity and emmit usage message to DC-X.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   A taxonomy_term or node entity.
 */
function _dcx_track_media_usage_track_media_usage(EntityInterface $entity) {

  $queue_factory = \Drupal::service('queue');

  $queue = $queue_factory->get('dcx_media_usage_worker', TRUE);

  $queue->createItem(['entity_id' => $entity->id(), 'entity_type' => $entity->getEntityTypeId()]);
}
