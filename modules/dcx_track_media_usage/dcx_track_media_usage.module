<?php

/**
 * @file
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function dcx_track_media_usage_media_delete($entity) {
  if ('image' !== $entity->bundle()) {
    return;
  }

  $dcx_id = $entity->field_dcx_id->value;
  try {
    $urls = Drupal::service('dcx_integration.client')->removeAllUsage($dcx_id);

    foreach ($urls as $url) {
      $parts = explode('/', $url);
      $entityId = end($parts);
      array_pop($parts);
      $entityType = implode('/', $parts);

      $entityStorage = \Drupal::entityTypeManager()
        ->getStorage($entityType);

      $entityStorage->load($entityId)->save();
    }

  }
  catch (\Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function dcx_track_media_usage_node_insert($entity) {
  _dcx_track_media_usage_track_media_usage($entity);
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function dcx_track_media_usage_node_update($entity) {
  _dcx_track_media_usage_track_media_usage($entity);
}

/**
 * Find media attached to this entity and emmit usage message to DC-X.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function _dcx_track_media_usage_track_media_usage(EntityInterface $entity) {
  $discovery = Drupal::service('dcx_track_media_usage.discover_referenced_entities');
  $usage = $discovery->discover($entity);

  $url = $entity->toUrl()->getInternalPath();

  $status = $entity->status->value;
  try {
    Drupal::service('dcx_integration.client')->trackUsage($usage, $url, $status, 'image');
  }
  catch (\Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}
